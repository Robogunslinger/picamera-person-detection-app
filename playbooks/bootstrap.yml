- name: "Install dependencies and run picamera person-detection app"
  hosts: "picamera"
  gather_facts: false
  vars:
    picamera_dir: "{{ PICAMERA_DIR | default('/home/pi/picamera-person-detection-app') }}"
    picamera_resource_dir: "{{ picamera_dir }}/picamera_person_detection/resources"
  tasks:
    - name: "Clone picamera-person-detection-app"
      git:
        repo: 'https://github.com/Robogunslinger/picamera-person-detection-app'
        dest: "{{ picamera_dir }}"
    - name: "Install virtualenv"
      shell:
        cmd: pip3 install virtualenv
    - name: Create virtual environment
      shell: python3 -m virtualenv -p $(which python3) .venv
      args:
        creates: "{{ picamera_dir }}/.venv"
        chdir: "{{ picamera_dir }}"
    - pip:
        chdir: "{{ picamera_dir }}"
        requirements: "{{ picamera_dir }}/requirements.txt"
        virtualenv: "{{ picamera_dir }}/.venv"
    - name: "Create resource directory"
      file:
        path: "{{ picamera_resource_dir }}"
        state: directory
    - name: "Download tensorflow lite model"
      shell: curl -O http://storage.googleapis.com/download.tensorflow.org/models/tflite/coco_ssd_mobilenet_v1_1.0_quant_2018_06_29.zip && unzip coco_ssd_mobilenet_v1_1.0_quant_2018_06_29.zip && rm coco_ssd_mobilenet_v1_1.0_quant_2018_06_29.zip
      args:
          chdir: "{{ picamera_resource_dir }}"
    - name: "Download tensorflow lite model labels"
      shell: curl -O  https://dl.google.com/coral/canned_models/coco_labels.txt && rm labelmap.txt
      args:
          chdir: "{{ picamera_resource_dir }}"
    - name: "Run shell command"
      shell: . .venv/bin/activate && pip3 install https://dl.google.com/coral/python/tflite_runtime-2.1.0.post1-cp37-cp37m-linux_armv7l.whl && sh run_app.sh
      args:
          chdir: "{{ picamera_dir }}"
